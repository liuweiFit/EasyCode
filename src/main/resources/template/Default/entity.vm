#*
说明文档：
属性
$packageName 选择的包名
$author 设置中的作者
$encode 设置的编码
$modulePath 选中的module路径
$projectPath 项目绝对路径
对象
$tableInfo 表对象
    obj 表原始对象
    name 表名（转换后的首字母大写）
    comment 表注释
    fullColumn 所有列
    pkColumn 主键列
    otherColumn 其他列
    savePackageName 保存的包名
    savePath 保存路径
    saveModelName 保存的model名称
columnInfo 列对象
    obj 列原始对象
    name 列名（首字母小写）
    comment 列注释
    type 列类型（类型全名）
    ext 附加字段（Map类型）
$tableInfoList 所有选中的表
$importList 所有需要导入的包集合
回调
&callback
    setFileName(String) 设置文件储存名字
    setSavePath(String) 设置文件储存路径，默认使用选中路径
工具
$tool
    firstUpperCase(String) 首字母大写方法
    firstLowerCase(String) 首字母小写方法
    getClsNameByFullName(String) 通过包全名获取类名
    getJavaName(String) 将下划线分割字符串转驼峰命名(属性名)
    getClassName(String) 将下划线分割字符串转驼峰命名(类名)
    append(... Object) 多个数据进行拼接
$time
    currTime(String) 获取当前时间，指定时间格式（默认：yyyy-MM-dd HH:mm:ss）
*#
##设置回调
$!callback.setFileName($tool.append($tableInfo.name, ".java"))
$!callback.setSavePath($tool.append($tableInfo.savePath, "/entity"))

#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}entity;

#foreach($import in $importList)
import $!import;
#end

/**
 * $!{tableInfo.comment}($!{tableInfo.name})表实体类
 *
 * @author $!author
 * @since $!time.currTime()
 */
public class $!{tableInfo.name} {
#foreach($column in $tableInfo.fullColumn)
    #if(${column.comment})//${column.comment}#end

    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};
#end

#foreach($column in $tableInfo.fullColumn)

    public $!{tool.getClsNameByFullName($column.type)} get$!{tool.firstUpperCase($column.name)}() {
        return $!{column.name};
    }

    public void set$!{tool.firstUpperCase($column.name)}($!{tool.getClsNameByFullName($column.type)} $!{column.name}) {
        this.$!{column.name} = $!{column.name};
    }
#end

}